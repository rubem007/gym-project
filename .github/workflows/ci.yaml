name: ci-workflow

on:
  pull_request:
    branches:
      - branch-dev
  
  workflow_dispatch:

jobs:
  #  config-scan:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     security-events: write # write permission on security tab
  #   outputs:
  #     sarif-id: ${{ steps.upload-sarif.outputs.sarif-id }}
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
      
  #     - name: Run Trivy vulnerability scanner in IaC mode
  #       uses: aquasecurity/trivy-action@master
  #       with:
  #         scan-type: 'config'
  #         hide-progress: false
  #         format: "sarif"
  #         output: "trivy-config-results.sarif"
  #         exit-code: 0
  #         ignore-unfixed: true
  #         severity: CRITICAL,HIGH,MEDIUM
      
  #     - name: Upload Trivy Scan Results to Github Security Tab
  #       id: upload-sarif  # Adiciona um ID a essa etapa
  #       uses: github/codeql-action/upload-sarif@v3
  #       with:
  #         sarif_file: "trivy-config-results.sarif"
      
  #     - name: Display SARIF ID
  #       run: echo "The SARIF ID is ${{ steps.upload-sarif.outputs.sarif-id }}"
  
  # run-e2e-test:
  #   name: Run End-to-End Tests
  #   uses: rubem007/gym-project/.github/workflows/run-e2e-tests.yaml@branch-dev

  run-tests:
    runs-on: ubuntu-latest
    services:
        db:
          image: mysql:8.0
          ports:
            - 3306:3306
          options: >-
            --health-cmd="mysqladmin ping --silent"
            --health-interval=10s
            --health-timeout=5s
            --health-retries=3
          env:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: gym_db
            MYSQL_USER: rdn
            MYSQL_PASSWORD: rdn007

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Install dependencies
        run: npm install
        working-directory: ./backoffice-api

      - name: Wait for DB to be ready
        run: |
          until mysqladmin ping -h"127.0.0.1" -u"rdn" -p"rdn007" --silent; do
            echo "Waiting for database connection..."
            sleep 2
          done

      - name: Run end-to-end tests
        run: npm run test:e2e
        working-directory: ./backoffice-api

  check-application:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Install dependencies
        run: npm install
        working-directory: ./backoffice-api

      # - name: Run end-to-end tests
      #   uses: rubem007/gym-project/.github/workflows/run-e2e-tests.yaml@branch-dev
      #   with:
      #     working-directory: ./backoffice-api
      
      - name: Run tests units
        run: npm run test:cov
        working-directory: ./backoffice-api

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # - name: Build
      #   run: npm run build
      #   working-directory: ./backoffice-api

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Build and push
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: ./backoffice-api
      #     file: ./backoffice-api/Dockerfile
      #     push: true
      #     tags: |
      #       ${{ secrets.DOCKERHUB_USERNAME }}/gym-app:${{ github.sha }}
      #       ${{ secrets.DOCKERHUB_USERNAME }}/gym-app:latest

      # - name: Run Trivy vulnerability scanner
      #   uses: aquasecurity/trivy-action@0.28.0
      #   with:
      #     image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/gym-app:${{ github.sha }}
      #     format: "table"
      #     exit-code: '1' # se estiver 0, ele n√£o interrompe a pipeline. Se estiver 1, interrompe
      #     severity: CRITICAL,HIGH,MEDIUM